version: 2

dist: .dist

before:
  hooks:
    - go mod download

builds:
  - id: gop
    main: ./cmd/gop
    binary: bin/gop
    ldflags:
      - -X github.com/goplus/gop/env.buildVersion=v{{.Version}}
      - -X github.com/goplus/gop/env.buildDate={{.Date}}
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin

archives:
  - format: tar.gz
    name_template: >-
      {{.ProjectName}}{{.Version}}.{{.Os}}-{{.Arch}}
      {{- if .Arm}}v{{.Arm}}{{end}}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE
      - "*.mod"
      - "*.sum"
      - "*.md"
      - "**/*.go"
      - "**/*.md"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

dockers:
  - goarch: "386"
    image_templates:
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-386
    use: buildx
    build_flag_templates:
      - --platform=linux/386
      - --build-arg=USE_GORELEASER_ARTIFACTS=1
      - --build-arg=GORELEASER_ARTIFACTS_TARBALL=./.dist/{{.ProjectName}}{{.Version}}.linux-386.tar.gz
    extra_files:
      - ./
  - goarch: amd64
    image_templates:
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-amd64
    use: buildx
    build_flag_templates:
      - --platform=linux/amd64
      - --build-arg=USE_GORELEASER_ARTIFACTS=1
      - --build-arg=GORELEASER_ARTIFACTS_TARBALL=./.dist/{{.ProjectName}}{{.Version}}.linux-amd64.tar.gz
    extra_files:
      - ./
  - goarch: arm64
    image_templates:
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-arm64
    use: buildx
    build_flag_templates:
      - --platform=linux/arm64
      - --build-arg=USE_GORELEASER_ARTIFACTS=1
      - --build-arg=GORELEASER_ARTIFACTS_TARBALL=./.dist/{{.ProjectName}}{{.Version}}.linux-arm64.tar.gz
    extra_files:
      - ./

docker_manifests:
  - name_template: ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}
    image_templates:
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-386
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-amd64
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-arm64
  - name_template: ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Major }}.{{ .Minor }}
    image_templates:
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-386
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-amd64
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-arm64
    skip_push: auto
  - name_template: ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Major }}
    image_templates:
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-386
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-amd64
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-arm64
    skip_push: auto
  - name_template: ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:latest
    image_templates:
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-386
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-amd64
      - ghcr.io/{{ envOrDefault "GITHUB_REPOSITORY" "goplus/gop" }}:{{ .Version }}-arm64
    skip_push: auto

winget:
  - name: goplus
    homepage: "https://goplus.org/"
    publisher: goplus
    publisher_url: https://github.com/goplus/gop
    publisher_support_url: "https://github.com/goplus/gop/issues/new"
    package_identifier: goplus.gop
    path: "manifests/g/goplus/gop/{{.Version}}"
    tags:
      - golang
      - go
      - gop
      - goplus
      - programming
      - language
      - compiler
      - interpreter
      - data science
      - engineering
      - education
    short_description: The Go+ Programming Language
    description: |
      The Go+ programming language is designed for engineering, STEM education, and data science.
      - For engineering: working in the simplest language that can be mastered by children.
      - For STEM education: studying an engineering language that can be used for work in the future.
      - For data science: communicating with engineers in the same language.
    license: Apache-2.0
    skip_upload: auto
    release_notes: "{{.Changelog}}"
    release_notes_url: "https://github.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/gop/releases/tag/v{{.Version}}"
    dependencies:
      - package_identifier: GoLang.Go
        minimum_version: 1.18.0
    repository:
      owner: goplus
      name: winget-pkgs
      branch: "{{.ProjectName}}-v{{.Version}}"
      git:
        url: "git@github.com:{{ .Env.GITHUB_REPOSITORY_OWNER }}/winget-pkgs.git"
        private_key: "{{ .Env.WINGET_PKGS_PRIVATE_KEY }}"
      pull_request:
        enabled: true
        draft: true
        base:
          owner: microsoft
          name: winget-pkgs
          branch: master

nfpms:
  - package_name: gop
    vendor: goplus
    homepage: https://goplus.org/
    maintainer: Li Jie <cpunion@gmail.com>
    license: Apache-2.0
    description: |
      The Go+ programming language is designed for engineering, STEM education, and data science.
      - For engineering: working in the simplest language that can be mastered by children.
      - For STEM education: studying an engineering language that can be used for work in the future.
      - For data science: communicating with engineers in the same language.
    formats:
      - "deb"
      - "rpm"
    overrides:
      deb:
        dependencies:
          - "golang-go (>= 1.18.0)"
      rpm:
        dependencies:
          - "golang-bin >= 1.18.0"
    file_name_template: >-
      {{ .ProjectName }}{{.Version}}.{{ .Os }}-{{ .Arch }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    bindir: /usr/lib/{{ .ProjectName }}
    contents:
      # source folder
      - src: "CODE_OF_CONDUCT.md"
        dst: "/usr/lib/{{ .ProjectName }}/CODE_OF_CONDUCT.md"
      - src: "Dockerfile"
        dst: "/usr/lib/{{ .ProjectName }}/Dockerfile"
      - src: "LICENSE"
        dst: "/usr/lib/{{ .ProjectName }}/LICENSE"
      - src: "Makefile"
        dst: "/usr/lib/{{ .ProjectName }}/Makefile"
      - src: "README.md"
        dst: "/usr/lib/{{ .ProjectName }}/README.md"
      - src: "all.bash"
        dst: "/usr/lib/{{ .ProjectName }}/all.bash"
      - src: "all.bat"
        dst: "/usr/lib/{{ .ProjectName }}/all.bat"
      - src: "ast"
        dst: "/usr/lib/{{ .ProjectName }}/ast"
      - src: "tool"
        dst: "/usr/lib/{{ .ProjectName }}/tool"
      - src: "builtin"
        dst: "/usr/lib/{{ .ProjectName }}/builtin"
      - src: "cl"
        dst: "/usr/lib/{{ .ProjectName }}/cl"
      - src: "cmd"
        dst: "/usr/lib/{{ .ProjectName }}/cmd"
      - src: "doc"
        dst: "/usr/lib/{{ .ProjectName }}/doc"
      - src: "env"
        dst: "/usr/lib/{{ .ProjectName }}/env"
      - src: "format"
        dst: "/usr/lib/{{ .ProjectName }}/format"
      - src: "go.mod"
        dst: "/usr/lib/{{ .ProjectName }}/go.mod"
      - src: "go.sum"
        dst: "/usr/lib/{{ .ProjectName }}/go.sum"
      - src: "make.bash"
        dst: "/usr/lib/{{ .ProjectName }}/make.bash"
      - src: "make.bat"
        dst: "/usr/lib/{{ .ProjectName }}/make.bat"
      - src: "parser"
        dst: "/usr/lib/{{ .ProjectName }}/parser"
      - src: "printer"
        dst: "/usr/lib/{{ .ProjectName }}/printer"
      - src: "scanner"
        dst: "/usr/lib/{{ .ProjectName }}/scanner"
      - src: "test"
        dst: "/usr/lib/{{ .ProjectName }}/test"
      - src: "demo"
        dst: "/usr/lib/{{ .ProjectName }}/demo"
      - src: "token"
        dst: "/usr/lib/{{ .ProjectName }}/token"
      - src: "x"
        dst: "/usr/lib/{{ .ProjectName }}/x"
      # symlinks to binaries
      - src: "/usr/lib/{{ .ProjectName }}/bin/gop"
        dst: /usr/bin/gop
        type: symlink

snapcrafts:
  - id: gop
    name: gop
    title: The Go+ Programming Language
    summary: The Go+ Programming Language
    description: |
      The Go+ programming language is designed for engineering, STEM education, and data science.
      - For engineering: working in the simplest language that can be mastered by children.
      - For STEM education: studying an engineering language that can be used for work in the future.
      - For data science: communicating with engineers in the same language.
    confinement: classic
    license: Apache-2.0
    name_template: >-
      {{ .ProjectName }}{{.Version}}.{{ .Os }}-{{ .Arch }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    extra_files:
      # source folder
      - source: "CODE_OF_CONDUCT.md"
        destination: "CODE_OF_CONDUCT.md"
      - source: "Dockerfile"
        destination: "Dockerfile"
      - source: "LICENSE"
        destination: "LICENSE"
      - source: "Makefile"
        destination: "Makefile"
      - source: "README.md"
        destination: "README.md"
      - source: "all.bash"
        destination: "all.bash"
      - source: "all.bat"
        destination: "all.bat"
      - source: "ast"
        destination: "ast"
      - source: "tool"
        destination: "tool"
      - source: "builtin"
        destination: "builtin"
      - source: "cl"
        destination: "cl"
      - source: "cmd"
        destination: "cmd"
      - source: "doc"
        destination: "doc"
      - source: "env"
        destination: "env"
      - source: "format"
        destination: "format"
      - source: "go.mod"
        destination: "go.mod"
      - source: "go.sum"
        destination: "go.sum"
      - source: "make.bash"
        destination: "make.bash"
      - source: "make.bat"
        destination: "make.bat"
      - source: "parser"
        destination: "parser"
      - source: "printer"
        destination: "printer"
      - source: "scanner"
        destination: "scanner"
      - source: "test"
        destination: "test"
      - source: "demo"
        destination: "demo"
      - source: "token"
        destination: "token"
      - source: "x"
        destination: "x"
    apps:
      gop:
        command: "gop"
        aliases: ["gop"]
        environment:
          GOPROOT: "$SNAP"

checksum:
  name_template: "{{ .ProjectName }}{{ .Version }}.checksums.txt"

release:
  prerelease: auto
