func foo() bool {
	return true
}
func bar() bool {
	return true
}

x := 0
if t := false; t {
	x = 3
} else {
	x = 5
}
println("x:", x)

x = 0
switch s := "Hello"; string(s) {
default:
	x = 7
case "world", "hi":
	x = 5
case "xsw":
	x = 3
}
println("x:", x)

v := "Hello"
switch {
case v == "xsw":
	x = 3
case v == "Hello", v == "world":
	x = 9
default:
	x = 7
}
println("x:", x)

v = "Hello"
switch {
case v == "xsw":
	x = 3
case v == "hi", v == "world":
	x = 9
default:
	x = 11
}
println("x:", x)

switch {
}

switch v {
default:
	println(v)
}

switch y := v; y {
default:
	println(y)
}

for k, v := range [k for k, _ <- make([]int, 20)] {
	if k < 10 {
		continue
	}
	if k > 15 {
		break
	}
	println(k, v)
}

for k, v <- {k: k for k, _ <- make([]int, 20)} {
	if k < 10 {
		continue
	}
	if k > 15 {
		println("map reach break", v > 15)
		break
	} else {
		continue
	}
}

FL01:
	for k, v := range [1, 2, 3] {
		if k < 2 {
			continue FL01
		}
		if k > 2 {
			println("range list")
			break FL01
		}
		println(k, v)
	}

FL02:
	for k, v <- {1: 1, 2: 2, 3: 3} {
		if k < 2 {
			continue FL02
		}
		if k > 2 {
			println("map reach break", v > 2)
			break FL02
		} else {
			continue
		}
	}

	println("fallthrough with tag")
	switch v {
	case "Hello":
		println(v)
		fallthrough
	case "hi":
		println(v)
		fallthrough
	default:
		println(v)
	}
	println("fallthrough without tag")

	z := 3
	switch {
	case z < 10:
		println(z)
		fallthrough
	case z == 10:
		println(z)
		fallthrough
	case z > 10:
		println(z)
		fallthrough
	default:
		println(z)
	}

	// switch with break
	switch z {
	case 3:
		if v == "Hello" {
			println("break")
			break
		}
		println("break fail")
	default:
		println(z)
	}

	goto L
	println("before")
L:
	println("over")

	i := 0
L2:
	if i < 3 {
		println(i)
		i++
		goto L2
	}
	println("over")

	x = 0
L3:
	for i := 0; i < 5; i++ {
		switch i {
		case 1:
			println(x)
			x++
			continue L3
		case 2:
			println(x)
			x++
			break
		case 3:
			println(x)
			break L3
		case 4:
			println(x)
		default:
			x = 7
			println(x)
		}
	}
	println(forFoo1())
	fooFoo2()

	// bugs #533
	if foo() {
		println("foo")
	} else {
		println("bar")
	}

	// #590
	if v := x; v > 0 {
		println(v)
	}
	switch v := x + 1; v {
	default:
		println(v)
	}
