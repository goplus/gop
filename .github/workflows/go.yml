name: Go+ CI

on:
  push:
    branches:
    - "*"
  pull_request:
    branches:
    - "*"

jobs:
  Check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Check goreleaser files
      run: |
        pip install --no-input pyyaml
        python .github/workflows/check_goreleaser_config.py

  Test:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
        go:
        - 1.19.x
        - 1.21.x
        - 1.22.x
        - 1.24.x
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}

    - name: Test Go+ installer
      run: |
        git config --global user.email "build-robot@goplus.org"
        git config --global user.name "build robot"
        go test -v cmd/make_test.go

    - name: Run testcases
      run: go test -v -coverprofile="coverage.txt" -covermode=atomic ./...

    - name: Codecov
      uses: codecov/codecov-action@v5
      with:
        slug: goplus/gop

  TestTypeAlias:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
        go:
        - 1.23.x
        - 1.24.x
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}

    - name: Set types alias env
      run: echo "GODEBUG=gotypesalias=1" >> $GITHUB_ENV

    - name: Test Go+ installer
      run: |
        git config --global user.email "build-robot@goplus.org"
        git config --global user.name "build robot"
        go test -v cmd/make_test.go

    - name: Run testcases
      run: go test -v -coverprofile="coverage.txt" -covermode=atomic ./...

    - name: Codecov
      uses: codecov/codecov-action@v5
      with:
        slug: goplus/gop

  FormatCheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.2"

      - name: Check formatting
        run: |
          if [ -n "$(go fmt ./... | grep -v gop_autogen)" ]; then
            echo "Some files are not properly formatted. Please run 'go fmt ./...'"
            exit 1
          fi
          ./all.bash
          cd cmd/xgo; gop fmt -t ./...
